openapi: 3.0.0
info:
  title: Comics API
  description: API for managing comics, pages and images
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Local development server
  - url: https://api.example.com
    description: Production server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        login:
          type: string
        name:
          type: string
    Comic:
      type: object
      properties:
        id:
          type: string
          format: uuid
        text:
          type: string
        description:
          type: string
        creator:
          type: string
          format: uuid
    ComicListItem:
      type: object
      properties:
        id:
          type: string
          format: uuid
        text:
          type: string
        description:
          type: string
        image:
          type: string
          format: base64
          description: Base64 encoded image
    Page:
      type: object
      properties:
        pageId:
          type: string
          format: uuid
        comicsId:
          type: string
          format: uuid
        number:
          type: integer
        rows:
          type: integer
        columns:
          type: integer
    Image:
      type: object
      properties:
        id:
          type: string
          format: uuid
        pageId:
          type: string
          format: uuid
        cellIndex:
          type: integer
        image:
          type: string
          format: base64
    ComicDetails:
      allOf:
        - $ref: '#/components/schemas/Comic'
        - type: object
          properties:
            pages:
              type: array
              items:
                type: object
                properties:
                  pageId:
                    type: string
                    format: uuid
                  number:
                    type: integer
                  rows:
                    type: integer
                  columns:
                    type: integer
                  images:
                    type: array
                    items:
                      $ref: '#/components/schemas/Image'
    AuthResponse:
      type: object
      properties:
        name:
          type: string
        token:
          type: string
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        details:
          type: string
    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string

paths:
  /api/user/auth:
    post:
      tags:
        - Authentication
      summary: Authenticate user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                password:
                  type: string
              required:
                - login
                - password
      responses:
        '200':
          description: Successful authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Missing required fields
        '401':
          description: Invalid credentials
        '404':
          description: User not found
        '500':
          description: Authentication failed

  /api/user/register:
    post:
      tags:
        - Authentication
      summary: Register new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                password:
                  type: string
                name:
                  type: string
              required:
                - login
                - password
                - name
      responses:
        '200':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Missing required fields
        '409':
          description: User already exists
        '500':
          description: Registration failed

  /api/user:
    get:
      tags:
        - User
      summary: Get current user info
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User info retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    $ref: '#/components/schemas/User'
        '401':
          description: Not authorized

  /api/comics:
    get:
      tags:
        - Comics
      summary: Get list of all comics
      responses:
        '200':
          description: List of comics
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ComicListItem'
        '500':
          description: Server error
    post:
      tags:
        - Comics
      summary: Create new comic
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                description:
                  type: string
                pages:
                  type: array
                  items:
                    type: object
                    properties:
                      number:
                        type: integer
                      rows:
                        type: integer
                      columns:
                        type: integer
                      images:
                        type: array
                        items:
                          type: object
                          properties:
                            image:
                              type: string
                              format: base64
              required:
                - text
                - description
                - pages
      responses:
        '200':
          description: Comic created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  comicId:
                    type: string
                    format: uuid
        '400':
          description: Missing required fields
        '401':
          description: Not authorized
        '500':
          description: Server error

  /api/mycomics:
    get:
      tags:
        - Comics
      summary: Get list of user's comics
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of user's comics
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ComicListItem'
        '401':
          description: Not authorized
        '500':
          description: Server error

  /api/comics/{id}:
    get:
      tags:
        - Comics
      summary: Get comic details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Comic details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComicDetails'
        '404':
          description: Comic not found
        '500':
          description: Server error
    put:
      tags:
        - Comics
      summary: Update comic
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comic:
                  type: object
                  properties:
                    text:
                      type: string
                    description:
                      type: string
                pages:
                  type: array
                  items:
                    type: object
                    properties:
                      pageId:
                        type: string
                        format: uuid
                      number:
                        type: integer
                      rows:
                        type: integer
                      columns:
                        type: integer
                      images:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            cellIndex:
                              type: integer
                            image:
                              type: string
                              format: base64
              required:
                - comic
                - pages
      responses:
        '200':
          description: Comic updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Missing required fields
        '401':
          description: Not authorized
        '403':
          description: Insufficient permissions
        '404':
          description: Comic not found
        '500':
          description: Server error
    delete:
      tags:
        - Comics
      summary: Delete comic
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Comic deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
        '401':
          description: Not authorized
        '403':
          description: Insufficient permissions
        '404':
          description: Comic not found
        '500':
          description: Server error

  /api/comics/pages/{comicsId}:
    post:
      tags:
        - Pages
      summary: Add page to comic
      security:
        - bearerAuth: []
      parameters:
        - name: comicsId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rows:
                  type: integer
                columns:
                  type: integer
              required:
                - rows
                - columns
      responses:
        '200':
          description: Page added
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Missing required fields
        '401':
          description: Not authorized
        '403':
          description: Insufficient permissions
        '404':
          description: Comic not found
        '500':
          description: Server error

  /api/comics/pages/{pageId}:
    delete:
      tags:
        - Pages
      summary: Delete page
      security:
        - bearerAuth: []
      parameters:
        - name: pageId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Page deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          description: Not authorized
        '403':
          description: Insufficient permissions
        '404':
          description: Page not found
        '500':
          description: Server error

  /api/comics/pages/images/{pageId}:
    post:
      tags:
        - Images
      summary: Add image to page
      security:
        - bearerAuth: []
      parameters:
        - name: pageId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cellIndex:
                  type: integer
                image:
                  type: string
                  format: base64
              required:
                - cellIndex
                - image
      responses:
        '200':
          description: Image added
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Missing required fields
        '401':
          description: Not authorized
        '403':
          description: Insufficient permissions
        '404':
          description: Page not found
        '500':
          description: Server error

  /api/comics/pages/images/{imageId}:
    delete:
      tags:
        - Images
      summary: Delete image
      security:
        - bearerAuth: []
      parameters:
        - name: imageId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Image deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Missing required fields
        '401':
          description: Not authorized
        '403':
          description: Insufficient permissions
        '404':
          description: Image not found
        '500':
          description: Server error


    put:
      tags:
        - Images
      summary: Update image
      security:
        - bearerAuth: []
      parameters:
        - name: imageId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: base64
              required:
                - cellIndex
                - image
      responses:
        '200':
          description: Image updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Missing required fields
        '401':
          description: Not authorized
        '403':
          description: Insufficient permissions
        '404':
          description: Image not found
        '500':
          description: Server error

  /health:
    get:
      tags:
        - System
      summary: Health check
      responses:
        '200':
          description: Server is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  database:
                    type: string
        '500':
          description: Server is unhealthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  database:
                    type: string
                  error:
                    type: string
